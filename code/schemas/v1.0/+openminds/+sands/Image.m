classdef Image < openminds.abstract.Schema
%Image - Structured information on an image.
%
%   PROPERTIES:
%
%   coordinateSpace : (1,1) <a href="matlab:help openminds.sands.CoordinateSpace" style="font-weight:bold">CoordinateSpace</a>
%                     Add the coordinate space this image exists in.
%
%   definedIn       : (1,1) <a href="matlab:help openminds.core.FileInstance" style="font-weight:bold">FileInstance</a>
%                     Add the file in which this image is stored in.
%
%   voxelSize       : (1,:) <a href="matlab:help openminds.core.QuantitativeValue" style="font-weight:bold">QuantitativeValue</a>
%                     Add two or three values with units defined that describe the size of one pixel (2D: [x, y]) or voxel (3D: [x, y, z]) in the physical space.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Add the coordinate space this image exists in.
        coordinateSpace (1,:) openminds.sands.CoordinateSpace ...
            {mustBeSpecifiedLength(coordinateSpace, 0, 1)}

        % Add the file in which this image is stored in.
        definedIn (1,:) openminds.core.FileInstance ...
            {mustBeSpecifiedLength(definedIn, 0, 1)}

        % Add two or three values with units defined that describe the size of one pixel (2D: [x, y]) or voxel (3D: [x, y, z]) in the physical space.
        voxelSize (1,:) openminds.core.QuantitativeValue ...
            {mustBeSpecifiedLength(voxelSize, 2, 3)}
    end

    properties (Access = protected)
        Required = ["coordinateSpace", "definedIn", "voxelSize"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/sands/Image"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'coordinateSpace', "openminds.sands.CoordinateSpace", ...
            'definedIn', "openminds.core.FileInstance" ...
        )
        EMBEDDED_PROPERTIES = struct(...
            'voxelSize', "openminds.core.QuantitativeValue" ...
        )
    end

    methods
        function obj = Image(varargin)
            obj@openminds.abstract.Schema(varargin{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = '<missing name>';
        end
    end

end