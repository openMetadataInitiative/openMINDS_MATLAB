classdef Measurement < openminds.abstract.Schema
%Measurement - Structured information about a measurement performed during a scientific experiment.
%
%   PROPERTIES:
%
%   additionalRemarks : (1,1) string
%                       Enter any additional remarks concerning this measurement.
%
%   measuredQuantity  : (1,1) <a href="matlab:help openminds.controlledterms.MeasuredQuantity" style="font-weight:bold">MeasuredQuantity</a>
%                       Add the quantity that was measured during this measurement.
%
%   measuredWith      : (1,1) <a href="matlab:help openminds.ephys.device.ElectrodeArrayUsage" style="font-weight:bold">ElectrodeArrayUsage</a>, <a href="matlab:help openminds.ephys.device.ElectrodeUsage" style="font-weight:bold">ElectrodeUsage</a>, <a href="matlab:help openminds.ephys.device.PipetteUsage" style="font-weight:bold">PipetteUsage</a>, <a href="matlab:help openminds.specimenprep.device.SlicingDeviceUsage" style="font-weight:bold">SlicingDeviceUsage</a>
%                       Add the device that was used during this measurement.
%
%   timestamp         : (1,1) datetime
%                       Enter the date and time on which this measurement was made, formatted as '2023-02-07T16:00:00+00:00'.
%
%   value             : (1,:) <a href="matlab:help openminds.core.miscellaneous.QuantitativeValue" style="font-weight:bold">QuantitativeValue</a>, <a href="matlab:help openminds.core.miscellaneous.QuantitativeValueRange" style="font-weight:bold">QuantitativeValueRange</a>
%                       Enter all values that were measured at the same time and are of the same measured quantity.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter any additional remarks concerning this measurement.
        additionalRemarks (1,1) string

        % Add the quantity that was measured during this measurement.
        measuredQuantity (1,:) openminds.controlledterms.MeasuredQuantity ...
            {mustBeSpecifiedLength(measuredQuantity, 0, 1)}

        % Add the device that was used during this measurement.
        measuredWith (1,:) openminds.internal.mixedtype.measurement.MeasuredWith ...
            {mustBeSpecifiedLength(measuredWith, 0, 1)}

        % Enter the date and time on which this measurement was made, formatted as '2023-02-07T16:00:00+00:00'.
        timestamp (1,:) datetime ...
            {mustBeSpecifiedLength(timestamp, 0, 1)}

        % Enter all values that were measured at the same time and are of the same measured quantity.
        value (1,:) openminds.internal.mixedtype.measurement.Value ...
            {mustBeListOfUniqueItems(value)}
    end

    properties (Access = protected)
        Required = ["measuredQuantity", "value"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.om-i.org/types/Measurement"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'measuredQuantity', "openminds.controlledterms.MeasuredQuantity", ...
            'measuredWith', ["openminds.ephys.device.ElectrodeArrayUsage", "openminds.ephys.device.ElectrodeUsage", "openminds.ephys.device.PipetteUsage", "openminds.specimenprep.device.SlicingDeviceUsage"] ...
        )
        EMBEDDED_PROPERTIES = struct(...
            'value', ["openminds.core.miscellaneous.QuantitativeValue", "openminds.core.miscellaneous.QuantitativeValueRange"] ...
        )
    end

    methods
        function obj = Measurement(varargin)
            obj@openminds.abstract.Schema(varargin{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = obj.createLabelForMissingLabelDefinition();
        end
    end
end