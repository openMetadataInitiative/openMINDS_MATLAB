classdef AnatomicalTargetPosition < openminds.abstract.Schema
%AnatomicalTargetPosition - No description available.
%
%   PROPERTIES:
%
%   additionalRemarks        : (1,1) string
%                              Enter any additional remarks concering this anatomical target position.
%
%   anatomicalTarget         : (1,:) <a href="matlab:help openminds.controlledterms.CellType" style="font-weight:bold">CellType</a>, <a href="matlab:help openminds.controlledterms.Organ" style="font-weight:bold">Organ</a>, <a href="matlab:help openminds.controlledterms.OrganismSubstance" style="font-weight:bold">OrganismSubstance</a>, <a href="matlab:help openminds.controlledterms.SubcellularEntity" style="font-weight:bold">SubcellularEntity</a>, <a href="matlab:help openminds.controlledterms.UBERONParcellation" style="font-weight:bold">UBERONParcellation</a>, <a href="matlab:help openminds.sands.CustomAnatomicalEntity" style="font-weight:bold">CustomAnatomicalEntity</a>, <a href="matlab:help openminds.sands.ParcellationEntity" style="font-weight:bold">ParcellationEntity</a>, <a href="matlab:help openminds.sands.ParcellationEntityVersion" style="font-weight:bold">ParcellationEntityVersion</a>
%                              Add all anatomical entities that describe the target position(s).
%
%   spatialLocation          : (1,:) <a href="matlab:help openminds.sands.CoordinatePoint" style="font-weight:bold">CoordinatePoint</a>
%                              Add all coordinate points that describe the spatial location of the anatomical target structure(s).
%
%   targetIdentificationType : (1,1) <a href="matlab:help openminds.controlledterms.AnatomicalIdentificationType" style="font-weight:bold">AnatomicalIdentificationType</a>
%                              Add the target identification type that best describes how the this anatomical target position was identified.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter any additional remarks concering this anatomical target position.
        additionalRemarks (1,1) string

        % Add all anatomical entities that describe the target position(s).
        anatomicalTarget (1,:) openminds.internal.mixedtype.anatomicaltargetposition.AnatomicalTarget ...
            {mustBeListOfUniqueItems(anatomicalTarget)}

        % Add all coordinate points that describe the spatial location of the anatomical target structure(s).
        spatialLocation (1,:) openminds.sands.CoordinatePoint ...
            {mustBeListOfUniqueItems(spatialLocation)}

        % Add the target identification type that best describes how the this anatomical target position was identified.
        targetIdentificationType (1,:) openminds.controlledterms.AnatomicalIdentificationType ...
            {mustBeSpecifiedLength(targetIdentificationType, 0, 1)}
    end

    properties (Access = protected)
        Required = ["anatomicalTarget", "targetIdentificationType"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/sands/AnatomicalTargetPosition"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'anatomicalTarget', ["openminds.controlledterms.CellType", "openminds.controlledterms.Organ", "openminds.controlledterms.OrganismSubstance", "openminds.controlledterms.SubcellularEntity", "openminds.controlledterms.UBERONParcellation", "openminds.sands.CustomAnatomicalEntity", "openminds.sands.ParcellationEntity", "openminds.sands.ParcellationEntityVersion"], ...
            'targetIdentificationType', "openminds.controlledterms.AnatomicalIdentificationType" ...
        )
        EMBEDDED_PROPERTIES = struct(...
            'spatialLocation', "openminds.sands.CoordinatePoint" ...
        )
    end

    methods
        function obj = AnatomicalTargetPosition(varargin)
            obj@openminds.abstract.Schema(varargin{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = '<missing name>';
        end
    end

end