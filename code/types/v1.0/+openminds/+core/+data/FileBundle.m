classdef FileBundle < openminds.abstract.Schema
%FileBundle - Structured information on a bundle of file instances.
%
%   PROPERTIES:
%
%   content            : (1,1) string
%                        Enter a short content description for this file bundle.
%
%   descendedFrom      : (1,:) <a href="matlab:help openminds.core.data.File" style="font-weight:bold">File</a>, <a href="matlab:help openminds.core.data.FileBundle" style="font-weight:bold">FileBundle</a>, <a href="matlab:help openminds.core.research.BehavioralTask" style="font-weight:bold">BehavioralTask</a>, <a href="matlab:help openminds.core.research.SubjectGroupState" style="font-weight:bold">SubjectGroupState</a>, <a href="matlab:help openminds.core.research.SubjectState" style="font-weight:bold">SubjectState</a>, <a href="matlab:help openminds.core.research.TissueSampleCollectionState" style="font-weight:bold">TissueSampleCollectionState</a>, <a href="matlab:help openminds.core.research.TissueSampleState" style="font-weight:bold">TissueSampleState</a>
%                        Add all entities that played a role in the production of this file bundle (must be true for all grouped files).
%
%   format             : (1,1) <a href="matlab:help openminds.core.data.ContentType" style="font-weight:bold">ContentType</a>
%                        If file instances within this bundle are organized and formatted according to a formal data structure use the appropriate contentType. Leave blank otherwise.
%
%   groupedBy          : (1,1) <a href="matlab:help openminds.controlledterms.FileBundleGrouping" style="font-weight:bold">FileBundleGrouping</a>
%                        Add the concept which was used to group file instances into this file bundle.
%
%   hash               : (1,1) <a href="matlab:help openminds.core.data.Hash" style="font-weight:bold">Hash</a>
%                        Add the hash that was generated for this file bundle.
%
%   isPartOf           : (1,1) <a href="matlab:help openminds.core.data.FileBundle" style="font-weight:bold">FileBundle</a>, <a href="matlab:help openminds.core.data.FileRepository" style="font-weight:bold">FileRepository</a>
%                        Add the file bundle or file repository this file bundle is a part of.
%
%   name               : (1,1) string
%                        Enter the name of this file bundle.
%
%   patternOfFilenames : (1,1) string
%                        Enter a regular expression (syntax: ECMA 262) which is valid for all filenames of the file instances that should be grouped into this file bundle.
%
%   storageSize        : (1,1) <a href="matlab:help openminds.core.miscellaneous.QuantitativeValue" style="font-weight:bold">QuantitativeValue</a>
%                        Enter the storage size this file bundle allocates.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter a short content description for this file bundle.
        content (1,1) string

        % Add all entities that played a role in the production of this file bundle (must be true for all grouped files).
        descendedFrom (1,:) openminds.internal.mixedtype.filebundle.DescendedFrom ...
            {mustBeListOfUniqueItems(descendedFrom)}

        % If file instances within this bundle are organized and formatted according to a formal data structure use the appropriate contentType. Leave blank otherwise.
        format (1,:) openminds.core.data.ContentType ...
            {mustBeSpecifiedLength(format, 0, 1)}

        % Add the concept which was used to group file instances into this file bundle.
        groupedBy (1,:) openminds.controlledterms.FileBundleGrouping ...
            {mustBeSpecifiedLength(groupedBy, 0, 1)}

        % Add the hash that was generated for this file bundle.
        hash (1,:) openminds.core.data.Hash ...
            {mustBeSpecifiedLength(hash, 0, 1)}

        % Add the file bundle or file repository this file bundle is a part of.
        isPartOf (1,:) openminds.internal.mixedtype.filebundle.IsPartOf ...
            {mustBeSpecifiedLength(isPartOf, 0, 1)}

        % Enter the name of this file bundle.
        name (1,1) string

        % Enter a regular expression (syntax: ECMA 262) which is valid for all filenames of the file instances that should be grouped into this file bundle.
        patternOfFilenames (1,1) string

        % Enter the storage size this file bundle allocates.
        storageSize (1,:) openminds.core.miscellaneous.QuantitativeValue ...
            {mustBeSpecifiedLength(storageSize, 0, 1)}
    end

    properties (Access = protected)
        Required = ["isPartOf", "name"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/core/FileBundle"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'descendedFrom', ["openminds.core.data.File", "openminds.core.data.FileBundle", "openminds.core.research.BehavioralTask", "openminds.core.research.SubjectGroupState", "openminds.core.research.SubjectState", "openminds.core.research.TissueSampleCollectionState", "openminds.core.research.TissueSampleState"], ...
            'format', "openminds.core.data.ContentType", ...
            'groupedBy', "openminds.controlledterms.FileBundleGrouping", ...
            'isPartOf', ["openminds.core.data.FileBundle", "openminds.core.data.FileRepository"] ...
        )
        EMBEDDED_PROPERTIES = struct(...
            'hash', "openminds.core.data.Hash", ...
            'storageSize', "openminds.core.miscellaneous.QuantitativeValue" ...
        )
    end

    methods
        function obj = FileBundle(structInstance, propValues)
            arguments
                structInstance (1,:) struct = struct.empty
                propValues.?openminds.core.data.FileBundle
                propValues.id (1,1) string
            end
            propValues = namedargs2cell(propValues);
            obj@openminds.abstract.Schema(structInstance, propValues{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = sprintf('%s (%s)', obj.name, obj.groupedBy);
        end
    end
end
