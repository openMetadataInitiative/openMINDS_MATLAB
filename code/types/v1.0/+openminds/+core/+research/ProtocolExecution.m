classdef ProtocolExecution < openminds.abstract.Schema
%ProtocolExecution - Structured information on a protocol execution.
%
%   PROPERTIES:
%
%   behavioralTask  : (1,:) <a href="matlab:help openminds.core.research.BehavioralTask" style="font-weight:bold">BehavioralTask</a>
%                     Add all behavioral tasks that were performed during this protocol execution.
%
%   description     : (1,1) string
%                     Enter a description of this activity.
%
%   endedAtTime     : (1,1) datetime
%                     Enter the time (e.g., '20:20:39+00:00') or datetime (e.g., '2018-11-13T20:20:39+00:00') of when the activity ended.
%
%   input           : (1,:) <a href="matlab:help openminds.core.data.File" style="font-weight:bold">File</a>, <a href="matlab:help openminds.core.data.FileBundle" style="font-weight:bold">FileBundle</a>, <a href="matlab:help openminds.core.research.SubjectGroupState" style="font-weight:bold">SubjectGroupState</a>, <a href="matlab:help openminds.core.research.SubjectState" style="font-weight:bold">SubjectState</a>, <a href="matlab:help openminds.core.research.TissueSampleCollectionState" style="font-weight:bold">TissueSampleCollectionState</a>, <a href="matlab:help openminds.core.research.TissueSampleState" style="font-weight:bold">TissueSampleState</a>
%                     Add all inputs used by this activity.
%
%   isPartOf        : (1,1) <a href="matlab:help openminds.core.products.DatasetVersion" style="font-weight:bold">DatasetVersion</a>
%                     Add the dataset version in which this protocol execution was conducted.
%
%   lookupLabel     : (1,1) string
%                     Enter a lookup label for this activity that may help you to more easily find it again.
%
%   output          : (1,:) <a href="matlab:help openminds.core.data.File" style="font-weight:bold">File</a>, <a href="matlab:help openminds.core.data.FileBundle" style="font-weight:bold">FileBundle</a>, <a href="matlab:help openminds.core.research.SubjectGroupState" style="font-weight:bold">SubjectGroupState</a>, <a href="matlab:help openminds.core.research.SubjectState" style="font-weight:bold">SubjectState</a>, <a href="matlab:help openminds.core.research.TissueSampleCollectionState" style="font-weight:bold">TissueSampleCollectionState</a>, <a href="matlab:help openminds.core.research.TissueSampleState" style="font-weight:bold">TissueSampleState</a>
%                     Add all outputs generated by this activity.
%
%   parameterSet    : (1,:) <a href="matlab:help openminds.core.research.ParameterSet" style="font-weight:bold">ParameterSet</a>
%                     Add all important parameters grouped in context-specific sets that were used in this activity.
%
%   preparationType : (1,1) <a href="matlab:help openminds.controlledterms.PreparationType" style="font-weight:bold">PreparationType</a>
%                     Add the initial preparation type for this protocol execution.
%
%   protocol        : (1,:) <a href="matlab:help openminds.core.research.Protocol" style="font-weight:bold">Protocol</a>
%                     Add all protocols that were used in this protocol execution.
%
%   startedAtTime   : (1,1) datetime
%                     Enter the time (e.g., '20:20:39+00:00') or datetime (e.g., '2018-11-13T20:20:39+00:00') of when the activity started.
%
%   studyTarget     : (1,:)
%                     Add all study targets of this activity.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Add all behavioral tasks that were performed during this protocol execution.
        behavioralTask (1,:) openminds.core.research.BehavioralTask ...
            {mustBeListOfUniqueItems(behavioralTask)}

        % Enter a description of this activity.
        description (1,1) string

        % Enter the time (e.g., '20:20:39+00:00') or datetime (e.g., '2018-11-13T20:20:39+00:00') of when the activity ended.
        endedAtTime (1,:) datetime ...
            {mustBeSpecifiedLength(endedAtTime, 0, 1)}

        % Add all inputs used by this activity.
        input (1,:) openminds.internal.mixedtype.protocolexecution.Input ...
            {mustBeListOfUniqueItems(input)}

        % Add the dataset version in which this protocol execution was conducted.
        isPartOf (1,:) openminds.core.products.DatasetVersion ...
            {mustBeSpecifiedLength(isPartOf, 0, 1)}

        % Enter a lookup label for this activity that may help you to more easily find it again.
        lookupLabel (1,1) string

        % Add all outputs generated by this activity.
        output (1,:) openminds.internal.mixedtype.protocolexecution.Output ...
            {mustBeListOfUniqueItems(output)}

        % Add all important parameters grouped in context-specific sets that were used in this activity.
        parameterSet (1,:) openminds.core.research.ParameterSet ...
            {mustBeListOfUniqueItems(parameterSet)}

        % Add the initial preparation type for this protocol execution.
        preparationType (1,:) openminds.controlledterms.PreparationType ...
            {mustBeSpecifiedLength(preparationType, 0, 1)}

        % Add all protocols that were used in this protocol execution.
        protocol (1,:) openminds.core.research.Protocol ...
            {mustBeListOfUniqueItems(protocol)}

        % Enter the time (e.g., '20:20:39+00:00') or datetime (e.g., '2018-11-13T20:20:39+00:00') of when the activity started.
        startedAtTime (1,:) datetime ...
            {mustBeSpecifiedLength(startedAtTime, 0, 1)}

        % Add all study targets of this activity.
        studyTarget (1,:)  ...
            {mustBeListOfUniqueItems(studyTarget)}
    end

    properties (Access = protected)
        Required = ["input", "isPartOf", "output", "protocol"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/core/ProtocolExecution"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'behavioralTask', "openminds.core.research.BehavioralTask", ...
            'input', ["openminds.core.data.File", "openminds.core.data.FileBundle", "openminds.core.research.SubjectGroupState", "openminds.core.research.SubjectState", "openminds.core.research.TissueSampleCollectionState", "openminds.core.research.TissueSampleState"], ...
            'isPartOf', "openminds.core.products.DatasetVersion", ...
            'output', ["openminds.core.data.File", "openminds.core.data.FileBundle", "openminds.core.research.SubjectGroupState", "openminds.core.research.SubjectState", "openminds.core.research.TissueSampleCollectionState", "openminds.core.research.TissueSampleState"], ...
            'preparationType', "openminds.controlledterms.PreparationType", ...
            'protocol', "openminds.core.research.Protocol", ...
            'studyTarget', [] ...
        )
        EMBEDDED_PROPERTIES = struct(...
            'parameterSet', "openminds.core.research.ParameterSet" ...
        )
    end

    methods
        function obj = ProtocolExecution(varargin)
            obj@openminds.abstract.Schema(varargin{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = sprintf('%s', obj.lookupLabel);
        end
    end
end
