classdef Protocol < openminds.abstract.Schema
%Protocol - Structured information on a research project.
%
%   PROPERTIES:
%
%   description : (1,1) string
%                 Enter a description of this protocol.
%
%   name        : (1,1) string
%                 Enter a descriptive name for this protocol.
%
%   studyOption : (1,:)
%                 Add all study options this protocol offers.
%
%   technique   : (1,:) <a href="matlab:help openminds.controlledterms.Technique" style="font-weight:bold">Technique</a>
%                 Add all techniques that were used in this protocol.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter a description of this protocol.
        description (1,1) string

        % Enter a descriptive name for this protocol.
        name (1,1) string

        % Add all study options this protocol offers.
        studyOption (1,:)  ...
            {mustBeListOfUniqueItems(studyOption)}

        % Add all techniques that were used in this protocol.
        technique (1,:) openminds.controlledterms.Technique ...
            {mustBeListOfUniqueItems(technique)}
    end

    properties (Access = protected)
        Required = ["description", "name", "technique"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/core/Protocol"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'studyOption', [], ...
            'technique', "openminds.controlledterms.Technique" ...
        )
        EMBEDDED_PROPERTIES = struct(...
        )
    end

    methods
        function obj = Protocol(structInstance, propValues)
            arguments
                structInstance (1,:) struct = struct.empty
                propValues.?openminds.core.research.Protocol
                propValues.id (1,1) string
            end
            propValues = namedargs2cell(propValues);
            obj@openminds.abstract.Schema(structInstance, propValues{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = sprintf('%s', obj.name);
        end
    end
end
