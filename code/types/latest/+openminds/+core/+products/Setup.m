classdef Setup < openminds.abstract.Schema
%Setup - No description available.
%
%   PROPERTIES:
%
%   description  : (1,1) string
%                  Enter a short text describing this setup.
%
%   hasPart      : (1,:) <a href="matlab:help openminds.core.products.Setup" style="font-weight:bold">Setup</a>, <a href="matlab:help openminds.core.products.SoftwareVersion" style="font-weight:bold">SoftwareVersion</a>, <a href="matlab:help openminds.ephys.device.Electrode" style="font-weight:bold">Electrode</a>, <a href="matlab:help openminds.ephys.device.ElectrodeArray" style="font-weight:bold">ElectrodeArray</a>, <a href="matlab:help openminds.ephys.device.Pipette" style="font-weight:bold">Pipette</a>, <a href="matlab:help openminds.specimenprep.device.SlicingDevice" style="font-weight:bold">SlicingDevice</a>
%                  Add all components, including other setups, that are part of this setup. Note that a setup should not be only composed of software.
%
%   location     : (1,1) string
%                  Enter the geographic location of this setup. This may include room number, building, institution and/or city.
%
%   manufacturer : (1,:) <a href="matlab:help openminds.core.actors.Consortium" style="font-weight:bold">Consortium</a>, <a href="matlab:help openminds.core.actors.Organization" style="font-weight:bold">Organization</a>, <a href="matlab:help openminds.core.actors.Person" style="font-weight:bold">Person</a>
%                  Add the manufacturer (private or industrial) that constructed this setup.
%
%   name         : (1,1) string
%                  Enter a descriptive name for this setup.
%
%   type         : (1,:) <a href="matlab:help openminds.controlledterms.SetupType" style="font-weight:bold">SetupType</a>
%                  Add all types that describe this setup.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter a short text describing this setup.
        description (1,1) string

        % Add all components, including other setups, that are part of this setup. Note that a setup should not be only composed of software.
        hasPart (1,:) openminds.internal.mixedtype.setup.HasPart ...
            {mustBeListOfUniqueItems(hasPart)}

        % Enter the geographic location of this setup. This may include room number, building, institution and/or city.
        location (1,1) string

        % Add the manufacturer (private or industrial) that constructed this setup.
        manufacturer (1,:) openminds.internal.mixedtype.setup.Manufacturer ...
            {mustBeListOfUniqueItems(manufacturer)}

        % Enter a descriptive name for this setup.
        name (1,1) string

        % Add all types that describe this setup.
        type (1,:) openminds.controlledterms.SetupType ...
            {mustBeListOfUniqueItems(type)}
    end

    properties (Access = protected)
        Required = ["description", "hasPart", "name"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.om-i.org/types/Setup"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'hasPart', ["openminds.core.products.Setup", "openminds.core.products.SoftwareVersion", "openminds.ephys.device.Electrode", "openminds.ephys.device.ElectrodeArray", "openminds.ephys.device.Pipette", "openminds.specimenprep.device.SlicingDevice"], ...
            'manufacturer', ["openminds.core.actors.Consortium", "openminds.core.actors.Organization", "openminds.core.actors.Person"], ...
            'type', "openminds.controlledterms.SetupType" ...
        )
        EMBEDDED_PROPERTIES = struct(...
        )
    end

    methods
        function obj = Setup(varargin)
            obj@openminds.abstract.Schema(varargin{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = obj.name;
        end
    end
end
