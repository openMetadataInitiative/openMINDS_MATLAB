classdef NumericalProperty < openminds.abstract.Schema
%NumericalProperty - Structured information about a property of some entity or process whose value is a number.
%
%   PROPERTIES:
%
%   name  : (1,1) string
%           Enter a descriptive name for this numerical property.
%
%   value : (1,:) <a href="matlab:help openminds.core.miscellaneous.QuantitativeValue" style="font-weight:bold">QuantitativeValue</a>, <a href="matlab:help openminds.core.miscellaneous.QuantitativeValueRange" style="font-weight:bold">QuantitativeValueRange</a>
%           Enter all quantitative values that are described by this numerical property.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter a descriptive name for this numerical property.
        name (1,1) string

        % Enter all quantitative values that are described by this numerical property.
        value (1,:) openminds.internal.mixedtype.numericalproperty.Value
    end

    properties (Access = protected)
        Required = ["name", "value"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.om-i.org/types/NumericalProperty"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
        )
        EMBEDDED_PROPERTIES = struct(...
            'value', ["openminds.core.miscellaneous.QuantitativeValue", "openminds.core.miscellaneous.QuantitativeValueRange"] ...
        )
    end

    methods
        function obj = NumericalProperty(structInstance, propValues)
            arguments
                structInstance (1,:) {mustBeA(structInstance, 'struct')} = struct.empty
                propValues.?openminds.core.research.NumericalProperty
                propValues.id (1,1) string
            end
            propValues = namedargs2cell(propValues);
            obj@openminds.abstract.Schema(structInstance, propValues{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = sprintf('%s', obj.name);
        end
    end
end
