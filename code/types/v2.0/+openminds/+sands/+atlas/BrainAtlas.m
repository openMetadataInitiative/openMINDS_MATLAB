classdef BrainAtlas < openminds.abstract.Schema & openminds.internal.mixin.HasControlledInstance
%BrainAtlas - No description available.
%
%   PROPERTIES:
%
%   description       : (1,1) string
%                       Enter a short description for this brain atlas.
%
%   digitalIdentifier : (1,1) <a href="matlab:help openminds.core.miscellaneous.DOI" style="font-weight:bold">DOI</a>
%                       Add the globally unique and persistent digital identifier of this brain atlas.
%
%   fullName          : (1,1) string
%                       Enter a descriptive full name for this brain atlas.
%
%   hasVersion        : (1,:) <a href="matlab:help openminds.sands.atlas.BrainAtlasVersion" style="font-weight:bold">BrainAtlasVersion</a>
%                       Add one or several brain atlas versions that belong to this brain atlas.
%
%   homepage          : (1,1) <a href="matlab:help openminds.core.miscellaneous.URL" style="font-weight:bold">URL</a>
%                       Add the uniform resource locator (URL) to the homepage of this brain atlas.
%
%   howToCite         : (1,1) string
%                       Enter the preferred citation text for this brain atlas. Leave blank if citation text can be extracted from the assigned digital identifier.
%
%   shortName         : (1,1) string
%                       Enter a descriptive short name for this brain atlas.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter a short description for this brain atlas.
        description (1,1) string

        % Add the globally unique and persistent digital identifier of this brain atlas.
        digitalIdentifier (1,:) openminds.core.miscellaneous.DOI ...
            {mustBeSpecifiedLength(digitalIdentifier, 0, 1)}

        % Enter a descriptive full name for this brain atlas.
        fullName (1,1) string

        % Add one or several brain atlas versions that belong to this brain atlas.
        hasVersion (1,:) openminds.sands.atlas.BrainAtlasVersion ...
            {mustBeListOfUniqueItems(hasVersion)}

        % Add the uniform resource locator (URL) to the homepage of this brain atlas.
        homepage (1,:) openminds.core.miscellaneous.URL ...
            {mustBeSpecifiedLength(homepage, 0, 1)}

        % Enter the preferred citation text for this brain atlas. Leave blank if citation text can be extracted from the assigned digital identifier.
        howToCite (1,1) string

        % Enter a descriptive short name for this brain atlas.
        shortName (1,1) string
    end

    properties (Access = protected)
        Required = ["description", "fullName", "hasVersion", "shortName"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/sands/BrainAtlas"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'digitalIdentifier', "openminds.core.miscellaneous.DOI", ...
            'hasVersion', "openminds.sands.atlas.BrainAtlasVersion", ...
            'homepage', "openminds.core.miscellaneous.URL" ...
        )
        EMBEDDED_PROPERTIES = struct(...
        )
    end

    methods
        function obj = BrainAtlas(structInstance, propValues)
            arguments
                structInstance (1,:) {mustBeA(structInstance, 'struct')} = struct.empty
                propValues.?openminds.sands.atlas.BrainAtlas
                propValues.id (1,1) string
            end
            propValues = namedargs2cell(propValues);
            obj@openminds.abstract.Schema(structInstance, propValues{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = obj.fullName;
        end
    end

    methods (Static)
        function instance = fromName(name)
            typeName = mfilename('classname');
            instance = openminds.internal.mixin.HasControlledInstance.fromName(name, typeName);
        end
        function instanceNames = listInstances()
            typeName = mfilename('classname');
            instanceNames = openminds.internal.mixin.HasControlledInstance.listInstances(typeName);
        end
    end
end
