name: Update openMINDS_MATLAB

on:
  # Triggers the workflow on push or pull request events for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'dev/README.md'
      - '.github/workflows/**'
      - 'docs/reports/**'
  pull_request:
    branches: [ "main" ]

  # Allows for manually running this workflow from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "test"
  test:
    name: Test openMINDS_MATLAB
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Check out repo
        uses: actions/checkout@v3
      
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2

      # Check for MATLAB code issues in the project.
      - name: Check for MATLAB code issues
        uses: matlab-actions/run-command@v2
        if: always()
        with:
          command: addpath(genpath("dev")),codecheckToolbox()     
          
      # Runs all tests in the project.
      - name: Run tests
        uses: matlab-actions/run-command@v2
        if: always()
        with:
          command: addpath(genpath("dev")), testToolbox()

      # Commit the JSON for the badge for the issues and tests
      - name: commit code issues badge JSON
        if: always()
        continue-on-error: true
        run: |
          git config user.name "${{ github.workflow }} by ${{ github.actor }}"
          git config user.email "<>"
          git add docs/reports/badge/code_issues.json docs/reports/badge/tests.json
          git commit -m "Update code issues and tests badges"
          git fetch
          # git push returns error code 1 if there's nothing to push (which there often isn't in this case)
          git push || true

      - name: Upload code coverage report to Codecov (https://app.codecov.io/gh/openMetadataInitiative/openMINDS_MATLAB)
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: docs/reports/codecoverage.xml
          
      # Publish test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "docs/reports/test-results.xml"
          
      # Save the contents of the reports directory as an artifact
      - name: Save Reports Directory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports
          path: docs/reports
